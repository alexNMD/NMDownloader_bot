services:
  redis:
    image: redis:latest
    container_name: redis-container
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  discord:
    image: nmd_downloader
    container_name: discord
    restart: unless-stopped
    command: ["python", "apps.discord_app"]
    networks:
      - app-network

  celery:
    image: nmd_downloader
    container_name: celery
    restart: unless-stopped
    command: ["celery", "--app", "apps.celery_app", "worker"]
    volumes:
      - /media/Armoire/Plex:/media/Armoire/Plex
    networks:
      - app-network
    environment:
      - C_FORCE_ROOT="true"
    healthcheck:
      test: celery --app celery_app status
      interval: 10s
      timeout: 10s
      retries: 10

  flower:
    depends_on:
      celery:
        condition: service_healthy
    image: nmd_downloader
    container_name: flower
    restart: unless-stopped
    ports:
      - "5555:5555"
    command: ["celery", "--app", "apps.celery_app", "flower"]
    networks:
      - app-network
    environment:
      - FLOWER_UNAUTHENTICATED_API=true
      - FLOWER_URL_PREFIX='/flower'

  flask:
    depends_on:
      celery:
        condition: service_healthy
    image: nmd_downloader
    container_name: flask
    restart: unless-stopped
    ports:
      - "5000:5000"
    command: ["flask", "--app", "apps.flask_app", "run"]
    networks:
      - app-network

volumes:
  redis-data:

networks:
  app-network:
    driver: bridge

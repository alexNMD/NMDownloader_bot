services:

  redis:
    image: redis:latest
    container_name: redis-container
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  discord:
    image: ghcr.io/alexnmd/nmd_downloader:latest
    volumes:
      - .env:/NMDownloader/.env
    container_name: discord
    restart: unless-stopped
    command: ["python", "-m", "apps.discord_app"]


  celery:
    image: ghcr.io/alexnmd/nmd_downloader:latest
    container_name: celery
    restart: unless-stopped
    command: ["celery", "--app", "apps.celery_app", "worker"]
    volumes:
      - ${DOWNLOAD_PATH}:${DOWNLOAD_PATH}
      - .env:/NMDownloader/.env
    environment:
      - C_FORCE_ROOT="true"
    healthcheck:
      test: celery --app apps.celery_app status
      interval: 10s
      timeout: 10s
      retries: 10

  flower:
    depends_on:
      celery:
        condition: service_healthy
    image: ghcr.io/alexnmd/nmd_downloader:latest
    volumes:
      - .env:/NMDownloader/.env
    container_name: flower
    restart: unless-stopped
    ports:
      - "5555:5555"
    command: ["celery", "--app", "apps.celery_app", "flower"]
    environment:
      - FLOWER_UNAUTHENTICATED_API=true
      - FLOWER_URL_PREFIX=flower

  flask:
    depends_on:
      celery:
        condition: service_healthy
    image: ghcr.io/alexnmd/nmd_downloader:latest
    volumes:
      - .env:/NMDownloader/.env
    container_name: flask
    restart: unless-stopped
    ports:
      - "8000:8000"
    command: [
      "gunicorn",
      "--workers", "${CONCURRENCY:-2}",
      "--bind", "0.0.0.0",
      "apps.flask_app:flask_app",
      "--access-logfile", "-",
      "--error-logfile", "-",
      "--log-level", "${LOG_LEVEL:-INFO}"]

volumes:
  redis-data:
